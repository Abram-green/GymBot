import os
import time
import asyncio
import random
import discord
import dbcontrol
import datetime
from constants import *
from discord.ext import commands
from dislash import slash_commands, Option, Type
from dislash.interactions import *


async def give_role(ctx, member: discord.Member, role: discord.Role):
    if ctx.author.id == 577583607581769729:
        await member.add_roles(role)


async def set_role(ctx, member: discord.Member, role: discord.Role):
    if ctx.author.id == 577583607581769729:
        await member.edit(roles=[role])
#
# @bot.command()
# async def new_gay(ctx, member:discord.Member):
#     dbcontrol.new_profile(member)
#     await member.edit(roles=[member.guild.get_role(roles[0])])

#
# @bot.command()
# async def ping(ctx, member: discord.Member):
#     for i in range(100):
#         m = await ctx.send(member.mention)
#         await m.delete()


async def rang(ctx, member: discord.Member = None):
    if member is None:
        member = ctx.author
    profile = dbcontrol.load_profile(member)
    xp = int("{0:.{1}f}".format(profile["xp"], 0))
    endLevel = profile['xp_l'] - xp
    embed = discord.Embed(title="–†–∞–Ω–≥:", description=f"{xp}/{profile['xp_l']}", color=member.roles[1].color)
    embed.add_field(name=f"–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å: {profile['level']}", value=f"–û—Å—Ç–∞–ª–æ—Å—å –¥–æ —Å–ª–µ–¥—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è: {endLevel}")
    embed.add_field(name=f"–í—Ä–µ–º—è –≤ –≤–æ–π—Å–µ", value=f"{str(datetime.timedelta(seconds=profile.get('VoiceTime')))}")
    embed.add_field(name="–†–æ–ª—å", value=f"{member.roles[1].mention}")
    embed.set_thumbnail(url=member.avatar_url_as())
    await ctx.send(embed=embed)


async def desc(ctx, member: discord.Member = None):
    ids = []
    gymcolor = None
    gymhero = None
    gymlocation = None
    descreption = ""
    if member is None:
        member = ctx.author
    for r in member.roles:
        ids.append(r.id)
    for id in ids:
        if id == 577583607581769729:
            descreption = "–° –º–∞–º–æ–π"
        if id in roles:
            gymhero = ctx.guild.get_role(id)
        if id in reactions:
            gymcolor = ctx.guild.get_role(id)
        if id in locations:
            gymlocation = ctx.guild.get_role(id)
    color = member.top_role.color
    emb = discord.Embed(title=member.display_name, descreption=descreption, color=color)
    if gymhero is not None:
        emb.add_field(name=f"–†–æ–ª—å: {gymhero.name}", value=f"{gymHistory[gymhero.id]}", inline=False)
    if gymcolor is not None:
        emb.add_field(name="–¶–≤–µ—Ç:", value=gymcolor.name, inline=False)
    if gymlocation is not None:
        emb.add_field(name=f"–õ–æ–∫–∞—Ü–∏—è: {gymlocation.name}", value=f"{locationDesc[gymlocation.id]}", inline=False)
    emb.add_field(name="–ü—Ä–∏—Å–æ–µ–¥–µ–Ω–∏–ª—Å—è", value=member.joined_at)
    emb.add_field(name="–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω", value=member.created_at)
    await ctx.send(embed=emb)


async def color(ctx, bot=None):
    member = ctx.author
    ids = []
    for r in ctx.author.roles:
        ids.append(r.id)
    if roles[5] in ids:
        emb = discord.Embed(title="–í—ã–±–µ—Ä–∏ —Ü–≤–µ—Ç!", color=ctx.author.top_role.color)
        row = ActionRow(
            Button(style=ButtonStyle.blurple, label="–ö—Ä–∞—Å–Ω—ã–π   ", custom_id="‚ù§"),
            Button(style=ButtonStyle.blurple, label="–û—Ä–∞–Ω–∂–µ–≤—ã–π ", custom_id="üß°"),
            Button(style=ButtonStyle.blurple, label="–ñ–µ–ª—Ç—ã–π    ", custom_id="üíõ"),
            Button(style=ButtonStyle.blurple, label="–ó–µ–ª—ë–Ω—ã–π   ", custom_id="üíö")
        )
        row1 = ActionRow(
            Button(style=ButtonStyle.blurple, label="–ì–æ–ª—É–±–æ–π   ", custom_id="üíô"),
            Button(style=ButtonStyle.blurple, label="–§–µ–æ–ª–µ—Ç–æ–≤—ã–π", custom_id="üíú"),
            Button(style=ButtonStyle.blurple, label="–ù–µ–≥—Ä      ", custom_id="üñ§"),
            Button(style=ButtonStyle.blurple, label="–ù–æ—Ä–º –º–µ–Ω  ", custom_id="ü§ç")
        )
        msg = await ctx.send(embed=emb, components=[row, row1])
        resp = await bot.wait_for("button_click")
        if resp.author == ctx.author:
            role = member.guild.get_role(reactions[colorEmoji.index(resp.component.custom_id)])
            ids = []
            for r in member.roles:
                ids.append(r.id)
            for id in ids:
                if id not in reactions:
                    try:
                        await member.add_roles(member.guild.get_role(id))
                    except Exception:
                        pass
                else:
                    await member.remove_roles(member.guild.get_role(id))
            await member.add_roles(role)
            await resp.respond(content=f"–¶–≤–µ—Ç –∏–∑–º–µ–Ω—ë–Ω{resp.component.custom_id}")
        else:
            pass


async def location(ctx, bot):
    ids = []
    member = ctx.author
    for r in ctx.author.roles:
        ids.append(r.id)
    if roles[5] in ids:
        emb = discord.Embed(title="–í—ã–±–µ—Ä–∏ –ª–æ–∫–∞—Ü–∏—é!", color=ctx.author.top_role.color)
        row = ActionRow(
            Button(style=ButtonStyle.blurple, label="Gym", custom_id="Gym"),
            Button(style=ButtonStyle.blurple, label="Dungeon", custom_id="Dungeon")
        )
        row1 = ActionRow(
            Button(style=ButtonStyle.blurple, label="Anal", custom_id="Anal"),
            Button(style=ButtonStyle.blurple, label="Home", custom_id="Home")
        )
        msg = await ctx.send(embed=emb, components=[row, row1])
        resp = await bot.wait_for("button_click")
        if resp.author == ctx.author:
            role = None
            if resp.component.custom_id == "Gym":
                role = member.guild.get_role(locations[0])
            if resp.component.custom_id == "Dungeon":
                role = member.guild.get_role(locations[1])
            if resp.component.custom_id == "Anal":
                role = member.guild.get_role(locations[2])
            if resp.component.custom_id == "Home":
                role = member.guild.get_role(locations[3])
            ids = []
            for r in member.roles:
                ids.append(r.id)
            for id in ids:
                if id not in locations:
                    try:
                        await member.add_roles(member.guild.get_role(id))
                    except Exception:
                        pass
                else:
                    await member.remove_roles(member.guild.get_role(id))
            await member.add_roles(role)
            await resp.respond(content="–õ–æ–∫–∞—Ü–∏—è –≤—ã–±—Ä–∞–Ω–∞")
        else:
            await resp.respond(content="–≠—Ç–æ –Ω–µ —Ç–≤–æ–π —Å–æ–æ–±—â–µ–Ω–∏–µ!")


async def buy(ctx, cmd, options):
    cmd = shopList[cmd]
    p = dbcontrol.load_profile(ctx.author)
    if cmd == 0 and p["xp"] >= 0:
        text = f"–¢–µ–∫—É—â–∏–π –ª–∏—Å—Ç —É—Å–ª—É–≥:\n1. –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ –±–æ—Ç–∞ - 100.000xp (–Ω–∏–∫ —Å—Ç–æ–∏—Ç –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –µ–≥–æ –Ω–µ —Å–º–µ–Ω–∏—Ç –∫—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–π). –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è -buy –Ω–∏–∫ <–Ω–∏–∫>\n2. –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è -buy –∑–∞–∫—Ä–µ–ø <id —Å–æ–æ–±—â–µ–Ω–∏—è> - 50.000xp\n3. –û—Ç–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è -buy –æ—Ç–∫—Ä–µ–ø <id —Å–æ–æ–±—â–µ–Ω–∏—è> - 60.000xp\n4. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∫ (–µ—Å—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è). –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è -buy –ø–∫. - 10 .000.000xp"
        await ctx.send(text)
    if cmd == 1 and p["xp"] >= 10000000:
        m = ctx.guild.get_member(577583607581769729)
        code = ""
        for i in range(6):
            c = random.choice("qwertyuiopasdfghjklzxcvbnm")
            if random.choice([0, 1]) == 1:
                c = c.upper()
            code += c
        text = f"–¢–≤–æ–π –∫–æ–¥ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {code}"
        await ctx.author.send(text + "\n —Å–∫–∏–Ω—å —ç—Ç–æ—Ç –∫–æ–¥ Abram")
        await m.send(text)
        p["xp"] -= 10000000
    if cmd == 2 and p["xp"] >= 60000:
        msg = await ctx.channel.fetch_message(int(options[0]))
        await msg.unpin()
        await ctx.send("–£—Å–ø–µ—à–Ω–æ!")
        p["xp"] -= 60000
    if cmd == 3 and p["xp"] >= 50000:
        msg = await ctx.channel.fetch_message(int(options[0]))
        await msg.pin()
        await ctx.send("–£—Å–ø–µ—à–Ω–æ!")
        p["xp"] -= 50000
    if cmd == 4 and p["xp"] >= 100000:
        t = ""
        for i in options:
            t += i + " "
        m = ctx.guild.get_member(856959819993841664)
        await m.edit(nick=t)
        await ctx.send("–£—Å–ø–µ—à–Ω–æ!")
        p["xp"] -= 100000
    dbcontrol.save_profile(p, ctx.author)


async def event(ctx):
    text = f"–°–µ–≥–æ–¥–Ω—è –∑–∞–¥–∞–Ω–∏–µ: –ü—Ä–æ—Å–∏–¥–µ—Ç—å –≤ –≤–æ–π—Å–µ 2 —á–∞—Å–∞"
    await ctx.send(text)